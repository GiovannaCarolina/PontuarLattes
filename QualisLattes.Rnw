\documentclass[12pt,brazil]{article}
\usepackage{babel}
\usepackage{color}
\usepackage{geometry}
\geometry{a4paper,landscape,left=2cm,right=2cm,top=2cm,bottom=2cm}
\usepackage{fontspec}
\setmainfont{Liberation Serif}
\usepackage{float}
\usepackage{longtable}
\usepackage{colortbl}
\usepackage{booktabs}
\usepackage{indentfirst}
\usepackage[unicode=true,
  pdfsubject={},
  pdfkeywords={},
  plainpages=false,
  bookmarks=false,
  pdfborder={0 0 0},
]{hyperref}

<<loadlibraries, echo=FALSE, cache=FALSE, message=FALSE>>=
opts_chunk$set(echo=FALSE, cache=FALSE,  fig.width=6, fig.height=3, fig.align="center", results='asis')
library("XML")
library("xtable")
library("descr")
library("ineq")
options(xtable.table.placement = "H",
        xtable.caption.placement = "top",
        xtable.booktabs = TRUE,
        xtable.floating = FALSE,
        xtable.tabular.environment = "longtable",
        format.args = list(big.mark = ".", decimal.mark = ","))
source("info.R")
@

\title{\Sexpr{TituloDoc}}
\author{\Sexpr{Autor}}
\date{\today}

\begin{document}

\maketitle

\tableofcontents

\clearpage

<<lattes>>=
doutorado <- list()
posdoc <- list()
premios <- list()
oriand <- list()
oriconc <- list()
ensino <- list()
nlist <- list()
obter.producao <- function(arquivo)
{
    unzip(paste0("lattes_xml/", arquivo), exdir = "/tmp/")
    xl <- xmlTreeParse("/tmp/curriculo.xml", encoding = "latin1")
    xl <- xl$doc$children$`CURRICULO-VITAE`
    prof <- xl$children$`DADOS-GERAIS`
    nomep <- prof$attributes[["NOME-COMPLETO"]]

    da <- sub("(..)(..)(....)", "\\1/\\2/\\3", xl$attributes[["DATA-ATUALIZACAO"]])

    if("DOUTORADO" %in% names(prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children)){
        xx <- prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children
        for(ii in 1:length(xx)){
            if("DOUTORADO" == names(xx)[ii]){
                yy <- xx[[ii]]$attributes[c("NOME-INSTITUICAO", "NOME-CURSO", "ANO-DE-CONCLUSAO")]
                doutorado[[length(doutorado)+1]] <<- c("Professor" = nomep, yy, "DataCV" = da)
            }
        }
    }

    if("POS-DOUTORADO" %in% names(prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children)){
        xx <- prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children
        for(ii in 1:length(xx)){
            if("POS-DOUTORADO" == names(xx)[ii]){
                yy <- xx[[ii]]$attributes[c("NOME-INSTITUICAO", "ANO-DE-INICIO", "ANO-DE-CONCLUSAO")]
                posdoc[[length(posdoc)+1]] <<- c("Professor" = nomep, yy)
            }
        }
    }

    if("ORIENTACOES-CONCLUIDAS" %in% names(xl$children$`OUTRA-PRODUCAO`$children)){
        xx <- xl$children$`OUTRA-PRODUCAO`$children$`ORIENTACOES-CONCLUIDAS`$children
        for(ii in 1:length(xx)){
            yy <- xx[[ii]]
            oriconc[[length(oriconc)+1]] <<- c("Professor" = nomep,
                                               yy[[1]]$attributes[c("NATUREZA", "ANO")],
                                               yy[[2]]$attributes[c("NOME-DA-INSTITUICAO",
                                                                    "NOME-DO-CURSO",
                                                                    "NOME-DO-ORIENTADO")])
        }
    }

    if(!is.null(xl$children$`DADOS-COMPLEMENTARES`$children$`ORIENTACOES-EM-ANDAMENTO`)){
        oa <- xl$children$`DADOS-COMPLEMENTARES`$children$`ORIENTACOES-EM-ANDAMENTO`$children
        for(ii in 1:length(oa))
        oriand[[length(oriand)+1]] <<- c("Professor" = nomep,
                                         oa[[ii]]$children[[1]]$attributes[c("NATUREZA", "ANO")],
                                         oa[[ii]]$children[[2]]$attributes[c("NOME-DO-ORIENTANDO",
                                                                             "NOME-INSTITUICAO")])
    }


    if("PREMIOS-TITULOS" %in% names(prof$children)){
        xx <- prof$children$`PREMIOS-TITULOS`$children
        for(ii in 1:length(xx)){
            premios[[length(premios)+1]] <<- c("Professor" = nomep, xx[[ii]]$attributes)
        }
    }

    ap <- xl$children$`DADOS-GERAIS`$children$`ATUACOES-PROFISSIONAIS`$children
    for(ii in 1:length(ap)){
        yy <- ap[[ii]]$children
        if("ATIVIDADES-DE-ENSINO" %in% names(yy))
            for(ens in yy$`ATIVIDADES-DE-ENSINO`$children){
                ensino[[length(ensino)+1]] <<- c("Professsor" = nomep,
                                                 ens$attributes[c("TIPO-ENSINO",
                                                                  "MES-INICIO",
                                                                  "ANO-INICIO",
                                                                  "MES-FIM",
                                                                  "ANO-FIM")],
                                                 ap[[ii]]$attributes["NOME-INSTITUICAO"])
            }
    }

    ap1 <- ap[[1]]

    xl <- xl$children$`PRODUCAO-BIBLIOGRAFICA`
    artigos <- xl$children$`ARTIGOS-PUBLICADOS`
    artigos <- artigos$children
    livros  <- xl$children$`LIVROS-E-CAPITULOS`
    capitulos <- livros$children$`CAPITULOS-DE-LIVROS-PUBLICADOS`
    capitulos <- capitulos$children
    livros <- livros$children$`LIVROS-PUBLICADOS-OU-ORGANIZADOS`
    livros <- livros$children
    rm(xl)

    pegar.artigo <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-ARTIGO`$attributes
        dl <- p$children$`DETALHAMENTO-DO-ARTIGO`$attributes
        if(db[["NATUREZA"]] == "COMPLETO"){
            res <- c(prof, db[["ANO-DO-ARTIGO"]], "Artigo",
                     db[["TITULO-DO-ARTIGO"]],
                     dl[["TITULO-DO-PERIODICO-OU-REVISTA"]],
                     dl[["ISSN"]])
        } else {
            res <- c(NA, NA, NA, NA, NA, NA)
        }
        return(res)
    }

    pegar.capitulo <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-CAPITULO`$attributes
        dl <- p$children$`DETALHAMENTO-DO-CAPITULO`$attributes
        res <- c(prof, db[["ANO"]], "Cap",
                 db[["TITULO-DO-CAPITULO-DO-LIVRO"]],
                 dl[["TITULO-DO-LIVRO"]], dl[["ISBN"]])
        return(res)
    }

    pegar.livro <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-LIVRO`
        db <- db$attributes
        dl <- p$children$`DETALHAMENTO-DO-LIVRO`
        dl <- dl$attributes
        if(db[["TIPO"]] == "LIVRO_ORGANIZADO_OU_EDICAO")
            res <- c(prof, db[["ANO"]], "Org", db[["TITULO-DO-LIVRO"]], NA, dl[["ISBN"]])
        else
            res <- c(prof, db[["ANO"]], "Lvr", db[["TITULO-DO-LIVRO"]], NA, dl[["ISBN"]])
        return(res)
    }

    b <- rbind(do.call("rbind", lapply(artigos,   pegar.artigo,   nomep)),
               do.call("rbind", lapply(capitulos, pegar.capitulo, nomep)),
               do.call("rbind", lapply(livros,    pegar.livro,    nomep)))
    rownames(b) <- NULL
    colnames(b) <- c("prof", "ano", "tipo", "producao", "livro.ou.periodico", "isxn")
    b
}

xx <- lapply(dir("lattes_xml", pattern = "*.zip"), obter.producao)
xx <- do.call("rbind", xx)
p <- as.data.frame(xx, stringsAsFactors = FALSE)
rm(xx, obter.producao)
@

<<mergeQualis>>=
if(exists("equivalente")){
    for(i in 1:length(equivalente))
        if(sum(qualis$isxn == equivalente[i]) == 1){
            idx <- grep(equivalente[i], qualis$isxn)
            qualis <- rbind(qualis, qualis[idx, ])
            qualis[nrow(qualis), "isxn"] <- names(equivalente)[i]
        }
}

p <- merge(p, qualis, all.x = TRUE, stringsAsFactors = FALSE)

p$qualis[is.na(p$qualis) & !is.na(p$tipo) & p$tipo == "Artigo"] <- "SQ"
p$qualis[is.na(p$qualis) & !is.na(p$tipo) & p$tipo != "Artigo"] <- p$tipo[is.na(p$qualis) & !is.na(p$tipo) & p$tipo != "Artigo"]

# Organização de dossiês em periódicos:
idx <- p$tipo != "Artigo" & p$qualis %in% c("A1", "A2", "B1", "B2", "B3", "B4", "B5", "C")
if(sum(idx) > 0)
    p$qualis[idx] <- "OD"

pontos <- as.data.frame(rbind(c(extenso = "Artigo Qualis A1", qualis = "A1"),
                              c("Artigo Qualis A2", "A2"),
                              c("Artigo Qualis B1", "B1"),
                              c("Artigo Qualis B2", "B2"),
                              c("Artigo Qualis B3", "B3"),
                              c("Artigo Qualis B4", "B4"),
                              c("Artigo Qualis B5", "B5"),
                              c("Artigo Qualis C", "C"),
                              c(paste("Artigo sem Qualis na área de", NomeComite), "SQ"),
                              c("Organização de dossiê em periódico", "OD"),
                              c("Livro publicado", "Lvr"),
                              c("Livro organizado", "Org"),
                              c("Capítulo de livro", "Cap")), stringsAsFactors = FALSE)
pontos <- merge(pontos, data.frame(qualis = names(PontosQualis), pontos = PontosQualis, stringsAsFactors = FALSE))

p <- merge(p, pontos, all.x = TRUE)


# Especificar o período do relatório
pcompleto <- p
p <- p[!is.na(p$ano) & p$ano >= Inicio & p$ano <= Fim, ]

p$ano <- factor(as.numeric(p$ano), levels = Inicio:Fim, labels = as.character(Inicio:Fim))

if(sum(is.na(p$pontos)) > 0){
    cat("\n\n\\textcolor{red}{Pontuação não definida}:\n\n\\begin{verbatim}\n")
    print(p[is.na(p$pontos), c("prof", "livro.ou.periodico", "qualis", "isxn")])
    cat("\\end{verbatim}\n\n")
}

doutor <- do.call("rbind", doutorado)
colnames(doutor) <- c("Professor", "Instituição doutorado", "Nome do curso", "Ano", "DataCV")

# Reter somente último doutorado concluído:
doutor <- doutor[order(doutor[, "Ano"], decreasing = TRUE), ]
notdup <- !duplicated(doutor[, "Professor"])
doutor <- doutor[notdup, ]

quando <- as.Date(doutor[, "DataCV"], format = "%d/%m/%Y")
doutor <- doutor[order(quando), ]
rm(quando)

p$prof <- factor(p$prof)

plvr <- p[p$tipo %in% c("Lvr", "Cap", "Org"), ]
part <- p[p$tipo == "Artigo", ]

pontuacaoLvr <- as.data.frame(tapply(plvr$pontos, list(plvr$prof, plvr$ano),
                                     sum, na.rm = TRUE))

# Adicionar professores que não produziram no período
falta <- !(doutor[, "Professor"] %in% rownames(pontuacaoLvr))
if(sum(falta) > 0){
    falta <- doutor[falta, "Professor"]
    ftab <- matrix(nrow = length(falta), ncol = ncol(pontuacaoLvr))
    rownames(ftab) <- falta
    colnames(ftab) <- colnames(pontuacaoLvr)
    pontuacaoLvr <- rbind(pontuacaoLvr, ftab)
}

pontuacaoLvr$Professor <- rownames(pontuacaoLvr)
pontuacaoLvr <- pontuacaoLvr[, c(ncol(pontuacaoLvr), 1:(ncol(pontuacaoLvr)-1))]
if(ncol(pontuacaoLvr) > 2){
    pontuacaoLvr$Total <- apply(pontuacaoLvr[, 2:ncol(pontuacaoLvr)], 1, sum, na.rm = TRUE)
    pontuacaoLvr$Total[is.na(pontuacaoLvr$Total)] <- 0
    pmediaL <- round(mean(pontuacaoLvr$Total, na.rm = TRUE))
    pmedianaL <- round(median(pontuacaoLvr$Total, na.rm = TRUE))
    pontuacaoLvr <- pontuacaoLvr[order(pontuacaoLvr$Total, decreasing = TRUE), ]
} else {
    pmediaL <- round(mean(pontuacaoLvr[, 2], na.rm = TRUE))
    pmedianaL <- round(median(pontuacaoLvr[, 2], na.rm = TRUE))
    pontuacaoLvr <- pontuacaoLvr[order(pontuacaoLvr[, 2], decreasing = TRUE), ]
}

pontuacaoArt <- as.data.frame(tapply(part$pontos, list(part$prof, part$ano),
                                     sum, na.rm = TRUE))

# Adicionar professores que não produziram no período
falta <- !(doutor[, "Professor"] %in% rownames(pontuacaoArt))
if(sum(falta) > 0){
    falta <- doutor[falta, "Professor"]
    ftab <- matrix(nrow = length(falta), ncol = ncol(pontuacaoArt))
    rownames(ftab) <- falta
    colnames(ftab) <- colnames(pontuacaoArt)
    pontuacaoArt <- rbind(pontuacaoArt, ftab)
}

pontuacaoArt$Professor <- rownames(pontuacaoArt)
pontuacaoArt <- pontuacaoArt[, c(ncol(pontuacaoArt), 1:(ncol(pontuacaoArt)-1))]
if(ncol(pontuacaoArt) > 2){
    pontuacaoArt$Total <- apply(pontuacaoArt[, 2:ncol(pontuacaoArt)], 1, sum, na.rm = TRUE)
    pontuacaoArt$Total[is.na(pontuacaoArt$Total)] <- 0
    pmediaA <- round(mean(pontuacaoArt$Total, na.rm = TRUE))
    pmedianaA <- round(median(pontuacaoArt$Total, na.rm = TRUE))
    pontuacaoArt <- pontuacaoArt[order(pontuacaoArt$Total, decreasing = TRUE), ]
} else {
    pmediaA <- round(mean(pontuacaoArt[, 2], na.rm = TRUE))
    pmedianaA <- round(median(pontuacaoArt[, 2], na.rm = TRUE))
    pontuacaoArt <- pontuacaoArt[order(pontuacaoArt[, 2], decreasing = TRUE), ]
}

p$um <- 1
producao <- tapply(p$um, list(p$prof, p$qualis), sum)
producao <- producao[, !grepl("Nada", colnames(producao))]
rownames(producao) <- c(rownames(producao)[1], paste("\\hline", rownames(producao)[2:nrow(producao)]))
@

<<printDataLattes>>=
print(xtable(doutor[, c("Professor", "DataCV")], align = "llc", caption = "Data de atualização do Currículo Lattes"), include.rownames = FALSE)
@

\clearpage

\section{Titulação}

<<tabelaGeral>>=
doutor <- doutor[order(doutor[, "Ano"]), ]
print(xtable(doutor[, 1:4], align = "llllc", caption = "Informações gerais sobre professores"), include.rownames = FALSE)
@

\newpage

<<areaTitulo>>=
xtable(freq(factor(doutor[, "Nome do curso"]), plot = FALSE),
       caption = "Área de titulação")
@

\newpage

<<localTitulo>>=
xtable(freq(factor(doutor[, "Instituição doutorado"]), plot = FALSE),
       caption = "Instituição de titulação")
@

\clearpage

<<posdoc>>=
posdoc <- do.call("rbind", posdoc)
colnames(posdoc) <- c("Professor", "Instituição", "Início", "Fim")
posdoc[, 1] <- sub(" .* ", " ", posdoc[, 1])
posdoc <- posdoc[order(posdoc[, "Fim"]), ]
print(xtable(posdoc, align = "lp{4.5cm}p{14cm}cc",
             caption = "Lista de Pós-doutorados realizados"),
      floating = FALSE, tabular.environment = "longtable",
      include.rownames = FALSE)
@

\clearpage

<<premios>>=
if(length(premios)){
    prm <- do.call("rbind", premios)
    colnames(prm) <- c("Professor", "Prêmio", "Entidade promotora", "Ano", "En")
    prm <- prm[order(prm[, "Ano"]), ]
    prm[, "Professor"] <- sub(" .* ", " ", prm[, "Professor"])
    prm <- as.data.frame(prm, stringsAsFactors = FALSE)
    prm <- prm[prm[, "Ano"] >= Inicio & prm[, "Ano"] <= Fim, ]
    if(nrow(prm) > 0)
        print(xtable(prm, align = "llp{8cm}p{7.5cm}cl", caption = "Lista de Prêmios recebidos"),
              include.rownames = FALSE)
    else
        cat("Nenhum prêmio recebido no período.\n")
} else {
        cat("Nenhum prêmio recebido.\n")
}
@

\newpage

\section{Orientações}

Nas tabelas \ref{tab:oriconc}, \ref{tab:detoriconc}, \ref{tab:oriand} e \ref{tab:oriandDet},
M = Mestrado,
O = Outros,
IC = Iniciação científica,
G = Trabalho de conclusão de curso,
E = Monografia de curso de aperfeiçoamento ou especialização,
M = Dissertação de mestrado,
D = Tese de doutorado e
PD = Supervisão de pós-doutorado.

<<oriconc>>=
oc <- do.call("rbind", oriconc)
colnames(oc) <- c("Professor", "Natureza", "Ano", "Instituição", "Curso", "Orientado")
oc <- as.data.frame(oc)
oc$Ano <- as.numeric(as.character(oc$Ano))
oc <- oc[oc$Ano >= Inicio & oc$Ano <= Fim, ]
oc <- droplevels(oc)

levels(oc$Natureza) <- sub("Dissertação de mestrado", "M", levels(oc$Natureza))
levels(oc$Natureza) <- sub("INICIACAO_CIENTIFICA", "IC", levels(oc$Natureza))
levels(oc$Natureza) <-
    sub("MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO", "E",
        levels(oc$Natureza))
levels(oc$Natureza) <- sub("ORIENTACAO-DE-OUTRA-NATUREZA", "O", levels(oc$Natureza))
levels(oc$Natureza) <- sub("Supervisão de pós-doutorado", "PD", levels(oc$Natureza))
levels(oc$Natureza) <- sub("Tese de doutorado", "D", levels(oc$Natureza))
levels(oc$Natureza) <- sub("TRABALHO_DE_CONCLUSAO_DE_CURSO_GRADUACAO", "G",
                                levels(oc$Natureza))
oc$um <- 1

oriconcTab <- tapply(oc$um, list(oc$Professor, oc$Natureza), sum)
oriconcTab[is.na(oriconcTab)] <- 0

# Ordenar colunas (nem todos os programas têm todos os tipos de orientações)
ordem <- c("O", "IC", "G", "E", "M", "D", "PD")
ordem <- ordem[ordem %in% levels(oc$Natureza)]

ro <- 1:nrow(oriconcTab)
if("PD" %in% ordem & "D" %in% ordem & "M" %in% ordem){
    ro <- order(oriconcTab[, "PD"], oriconcTab[, "D"], oriconcTab[, "M"],
                decreasing = TRUE)
} else {
    if("D" %in% ordem & "M" %in% ordem){
        ro <- order(oriconcTab[, "D"], oriconcTab[, "M"], decreasing = TRUE)
    } else {
        if("M" %in% ordem)
            ro <- order(oriconcTab[, "M"], decreasing = TRUE)
    }
}

if(nrow(oriconcTab) > 1)
    oriconcTab <- oriconcTab[ro, ordem]

aln <- paste0("l", paste0(rep("r", ncol(oriconcTab)), collapse = ""))

xtable(oriconcTab, align = aln, digits = 0, label = "tab:oriconc",
       caption = paste0("Orientações concluídas no período ", Inicio, "--", Fim))
@

<<detOriConc>>=
oc$Professor <- sub(" .* ", " ", oc$Professor)
oc$Orientado <- sub(" .* ", " ", oc$Orientado)
oc$Instituição <- sub("Universidade", "U.", oc$Instituição)
oc$Instituição <- sub("Federal", "F.", oc$Instituição)
oc$Instituição <- sub("Estadual", "E.", oc$Instituição)
oc$Curso <- sub("Programa de Pós-Graduação", "PPG", oc$Curso)
oc <- oc[order(paste(oc$Natureza, oc$Instituição, oc$Curso, oc$Professor, oc$Orientado, oc$Ano)),
         c("Natureza", "Instituição", "Curso", "Professor", "Orientado", "Ano")]
print(xtable(oc, align = "lcp{5.5cm}p{7cm}p{4cm}p{4cm}c", label = "tab:detoriconc",
         digits = 0, caption = "Detalhamento das orientações"),
      include.rownames = FALSE)
@

\newpage

<<oriand>>=
oa <- do.call("rbind", oriand)
oa <- as.data.frame(oa)
colnames(oa) <- c("Professor", "Natureza", "Ano", "Orientando", "Instituição")
oa <- oa[order(oa$Ano), ]
levels(oa$Natureza) <- sub("Dissertação de mestrado", "M", levels(oa$Natureza))
levels(oa$Natureza) <- sub("Iniciação Científica", "IC", levels(oa$Natureza))
levels(oa$Natureza) <-
    sub("Monografia de conclusão de curso de aperfeiçoamento/especialização", "E",
        levels(oa$Natureza))
levels(oa$Natureza) <- sub("Orientação de outra natureza", "O", levels(oa$Natureza))
levels(oa$Natureza) <- sub("Supervisão de pós-doutorado", "PD", levels(oa$Natureza))
levels(oa$Natureza) <- sub("Tese de doutorado", "D", levels(oa$Natureza))
levels(oa$Natureza) <- sub("Trabalho de conclusão de curso de graduação", "G",
                               oa$Natureza)
oa$um <- 1
oriandTab <- tapply(oa$um, list(oa$Professor, oa$Natureza), sum)
oriandTab[is.na(oriandTab)] <- 0

ordem <- c("O", "IC", "G", "E", "M", "D", "PD")
ordem <- ordem[ordem %in% levels(oa$Natureza)]

ro <- 1:nrow(oriandTab)
if("PD" %in% ordem & "D" %in% ordem & "M" %in% ordem){
    ro <- order(oriandTab[, "PD"], oriandTab[, "D"], oriandTab[, "M"],
                decreasing = TRUE)
} else {
    if("D" %in% ordem & "M" %in% ordem){
        ro <- order(oriandTab[, "D"], oriandTab[, "M"], decreasing = TRUE)
    } else {
        if("M" %in% ordem)
            ro <- order(oriandTab[, "M"], decreasing = TRUE)
    }
}

oriandTab <- oriandTab[ro, ordem]

aln <- paste0("ll", paste0(rep("r", ncol(oriandTab)-1), collapse = ""))

xtable(oriandTab, align = aln, label = "tab:oriand", digits = 0,
       caption = paste0("Orientações em andamento no período ", Inicio, "--", Fim))
@

\newpage

<<oriandTab>>=
oa$um <- NULL
oa <- oa[order(paste(oa$Ano, oa$Professor, oa$Natureza, oa$Instituição)),
         c("Ano", "Professor", "Natureza", "Instituição", "Orientando")]
oa$Professor <- sub(" .* ", " ", oa$Professor)
print(xtable(oa, align = "lcp{4.5cm}cp{8cm}p{8cm}", label = "tab:oriandDet",
             caption = "Detalhamento das orientações em andamento"),
      include.rownames = FALSE)
@

\newpage

\section{Ensino}

A Tabela \ref{tab:ensino} mostra o número de vezes que o item ``Ensino'' foi
registrado no Lattes no período \Sexpr{Inicio}--\Sexpr{Fim}.

<<tabEnsino>>=
ens <- do.call("rbind", ensino)
ens <- as.data.frame(ens, stringsAsFactors = FALSE)
names(ens) <- c("Professor", "Tipo", "MI", "AnoI", "MF", "AnoF")
ens <- ens[ens$AnoI >= as.character(Inicio) &
                 (ens$AnoF <= as.character(Fim) | ens$AnoF == ""), ]
ens$um <- 1
ensinoTab <- tapply(ens$um, list(ens$Professor, ens$Tipo), sum)
ensinoTab[is.na(ensinoTab)] <- 0

aln <- paste0("ll", paste0(rep("r", ncol(ensinoTab)-1), collapse = ""))
xtable(ensinoTab, align = aln, label = "tab:ensino", digits = 0,
       caption = paste0("Registro do item ``Ensino'' no período ", Inicio, "--", Fim))
@

\newpage

\section{Produção bibliográfica}

\subsection{Produção no período \Sexpr{Inicio}--\Sexpr{Fim}}

A Tabela \ref{tab:pontos} mostra os valores atribuídos aos diferentes níveis
de classificação Qualis dos periódicos. Livros e capítulos de livros não
classificados pelo comitê de \emph{\Sexpr{NomeComite}} da CAPES, podem não ter
sido contabilizados na produção do Programa, mas, aqui, estão,
arbitrariamente, recebendo pontuação equivalente a L2. Qualis de outras áreas
não têm valor para a área de \emph{\Sexpr{NomeComite}}.

<<classifpontos>>=
colnames(pontos) <- c("Classe", "Abreviatura", "Pontos")
print(xtable(pontos, digits = 0, label = "tab:pontos",
             caption = "Tabela de pontuação conforme classificação da produção"),
      include.rownames = FALSE)
@

Seguindo os valores da Tabela \ref{tab:pontos}, a pontuação total média dos
professores do Programa de Pós-Graduação em \Sexpr{NomeProg} no período
\Sexpr{Inicio}--\Sexpr{Fim} na produção de livros e capítulos foi de
\textbf{\Sexpr{pmediaL}} pontos e a mediana de \textbf{\Sexpr{pmedianaL}}
pontos e na produção de artigos foi de \textbf{\Sexpr{pmediaA}} pontos e a
mediana de \textbf{\Sexpr{pmedianaA}}. A área de \Sexpr{NomeComite} atribui
peso \Sexpr{PesoLivros} aos livros e \Sexpr{PesoArtigos} aos artigos.
Usando esses valores, a soma ponderada das média é de
\textbf{\Sexpr{PesoLivros * pmediaL + PesoArtigos * pmediaA}}.

\newpage

<<ppg_pontos_lvr>>=
print(xtable(pontuacaoLvr, digits = 0,
             caption = "Professores classificados por pontuação (Livros)"),
      include.rownames = FALSE)
@

\clearpage

<<ppg_pontos_art>>=
print(xtable(pontuacaoArt, digits = 0,
             caption = "Professores classificados por pontuação (Artigos)"),
      include.rownames = FALSE)
@

\clearpage

A Tabela~\ref{tab:pond} apresenta a classificação dos professores quando sua
produção é ponderada de acordo com os critérios do comitê de área. Uma linha
adicional, indicadora da concentração da produção, apresenta o índice de Gini
para livros, artigos e para a média ponderada dos dois tipos de produção.

<<ppg_ponderado>>=
if(ncol(pontuacaoLvr) > 2){
    pLvr <- pontuacaoLvr[, c("Professor", "Total")]
    pArt <- pontuacaoArt[, c("Professor", "Total")]
} else {
    # Relatório de somente 1 ano
    pLvr <- pontuacaoLvr
    pArt <- pontuacaoArt
}
colnames(pLvr) <- c("Professor", "Livros")
colnames(pArt) <- c("Professor", "Artigos")
pond <- merge(pLvr, pArt, all = TRUE)
pond$Livros[is.na(pond$Livros)] <- 0
pond$Artigos[is.na(pond$Artigos)] <- 0
pond$Livros <- pond$Livros / max(pond$Livros, na.rm = TRUE)
pond$Artigos <- pond$Artigos / max(pond$Artigos, na.rm = TRUE)
pond$Média <- PesoArtigos * pond$Artigos + PesoLivros * pond$Livros
pond <- pond[order(pond$Média, decreasing = TRUE), ]
rownames(pond) <- as.character(1:nrow(pond))
@

\begin{longtable}{rlrrr}
\caption{Professores classificados por pontuação ponderada} \\
  \toprule
<<imprimirpond>>=
print(xtable(pond, digits = 3, label = "tab:pond",
             caption = "Professores classificados por pontuação ponderada"),
      booktabs = FALSE, only.contents = TRUE)
@
 & Índice de Gini & \Sexpr{sprintf("%0.3f", Gini(pond$Livros))}  &
                   \Sexpr{sprintf("%0.3f", Gini(pond$Artigos))} &
                   \Sexpr{sprintf("%0.3f", Gini(pond$Média))} \\
  \bottomrule
\label{tab:pond}
\end{longtable}


\clearpage

<<producao_qualis>>=
print(xtable(producao, align = paste(c("l", rep("r", ncol(producao))), collapse = "|"),
             display = c("s", rep("d", ncol(producao))),
             caption = "Produção segundo classificação Qualis"),
      sanitize.rownames.function = function(x) x)
@

\clearpage

\subsection{Média móvel}

Raramente, um professor conseguirá manter aproximadamente o mesmo número de
publicações e com a mesma qualificação ano após ano. Por isso, os gráficos
seguintes mostram as médias móveis com períodos de três anos de produção dos
professores. Ou seja, cada ponto representa o valor médio da pontuação nos
últimos três anos.

<<mediamovel, fig.width=8, fig.height=3>>=
par(mar = c(4, 4, 4, 0) + 0.1, cex = 0.75)
pcl <- split(pcompleto, pcompleto$prof)
MediaMovel <- function(x)
{
    m <- tapply(x$pontos, x$ano, sum)
    mm <- rep(0, max(as.numeric(names(m))) - min(as.numeric(names(m))) + 1)
    names(mm) <- as.character(as.numeric(min(names(m))):as.numeric(max(names(m))))
    for(n in names(m))
        mm[[n]] <- m[[n]]
    mml <- length(mm)
    mm1 <- mm[3:mml]
    mm2 <- mm[2:(mml - 1)]
    mm3 <- mm[1:(mml - 2)]
    mm <- (mm1 + mm2 + mm3) / 3
}
mm <- lapply(pcl, MediaMovel)

for(n in names(mm)){
    plot(as.numeric(names(mm[[n]])), mm[[n]],
         pch=20, main = n, xlab = "Ano", ylab = "Média")
    lines(as.numeric(names(mm[[n]])), mm[[n]])
    cat("\n\\vspace{0.5cm}\n")
}
@

\clearpage

\section{Apêndices}

\definecolor{ncarac}{rgb}{1,0.7,0.7}
\definecolor{ninval}{rgb}{1,1,0.5}
\definecolor{duplic}{rgb}{0.7,0.8,1}
\definecolor{capdup}{rgb}{1,0.5,1}


<<apendice1, warning=FALSE>>=
# http://stackoverflow.com/questions/5060076/convert-html-character-entity-encoding-in-r
# Convenience function to convert html codes
html2txt <- function(str) {
      xpathApply(htmlParse(str, asText=TRUE, encoding = "UTF-8"),
                 "//body//text()", xmlValue)[[1]]
}

b <- p[, c("prof", "producao", "ano", "qualis", "livro.ou.periodico", "isxn")]
b <- b[order(p$prof, p$ano, p$producao), ]

b$prof <- sub(" .* ", " ", b$prof)
b$prof <- sub("^(...................).*", "\\1", b$prof)
b$producao <- sapply(b$producao, html2txt)
# b$livro.ou.periodico <- html2txt(b$livro.ou.periodico)
# b$producao <- gsub("_", "\\_", b$producao)
b$livro.ou.periodico <- gsub("_", "\\\\_", b$livro.ou.periodico)

erros <- NULL

bp <- split(b, b$prof)
ObterCapDup <- function(x)
{
    isbnls <- x$isxn[x$qualis == "Lvr"]
    x$capdup <- x$qualis == "Cap" & x$isxn %in% isbnls
    x
}
bp <- lapply(bp, ObterCapDup)
b <- do.call("rbind", bp)
if(sum(b$capdup) > 0){
    b$prof[b$capdup] <- paste("\\rowcolor{capdup}", b$prof[b$capdup])
    erros <- c(erros, "\\rowcolor{capdup}Capítulo indevidamente registrado porque pertence a livro do próprio professor.")
}
b$capdup <- NULL

idx <- ((b$tipo == "Artigo" | b$qualis == "OD") & nchar(b$isxn) != 8) | ((b$tipo != "Artigo" & b$qualis != "OD") & nchar(b$isxn) != 13)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{ncarac}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{ncarac}ISSN ou ISBN com número inválido de caracteres. O ISSN deve ter 8 caracteres e o ISBN deve ter 13.")
}

# ISBN check digit
checkISBN <- function(x){
    x <- strsplit(x, "")[[1]]
    if(length(x) != 13)
        return(FALSE) # Não é livro
    x <- as.numeric(x)
    if(sum(is.na(x)) > 0)
        return(TRUE)
    correto <- 10 - (sum(x[1:12] * c(1, 3)) %% 10)
    if(correto == 10)
        correto <- 0
    if(x[13] == correto){
        return(FALSE) # Nenhum problema
    } else {
        return(TRUE)  # Erro na soma
    }
}

idx <- sapply(b$isxn, checkISBN)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{ninval}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{ninval}O ISBN é inválido. Confira se todos os algarismos estão corretos.")
}


b$producao <- sub("^(....................................).*", "\\1", b$producao)
b$livro.ou.periodico <- sub("^(....................................).*", "\\1", b$livro.ou.periodico)
idx <- grep("[A-Z][A-Z][A-Z][A-Z][A-Z]", b$producao)
b$producao[idx] <- sub("^(...........................).*", "\\1", b$producao[idx])
idx <- grep("[A-Z][A-Z][A-Z][A-Z][A-Z]", b$livro.ou.periodico)
b$livro.ou.periodico[idx] <- sub("^(...........................).*", "\\1", b$livro.ou.periodico[idx])

dup <- b[, c("prof", "qualis", "producao")]
dup$producao <- tolower(dup$producao)
dup$producao <- gsub("[[:punct:]]", "", dup$producao)
dup$producao <- gsub("[[:space:]]", "", dup$producao)
dup$producao <- sub("^(........................).*", "\\1", dup$producao)
idx <- duplicated(dup)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{duplic}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{duplic}Produção registrada mais de uma vez.")
}

rm(idx, dup, checkISBN)

b$livro.ou.periodico <- gsub("&", "\\\\&", b$livro.ou.periodico)
b$producao <- gsub("&", "\\\\&", b$producao)
b$producao <- gsub("#", "\\\\#", b$producao)
b$livro.ou.periodico <- gsub("#", "\\\\#", b$livro.ou.periodico)

levels(b$qualis) <- sub("Nada", " ", levels(b$qualis))
names(b) <- c("Professor", "Produção (títulos truncados)", "Ano", "Qualis",
              "Periódico ou Livro (títulos truncados)", "ISSN/ISBN")
@

<<printerros>>=
if(length(erros) > 0){
    cat("\\textbf{Legenda de erros de preenchimento do Lattes indicados na Tabela \\ref{tab:proddet}}:\n\n")
    cat("\\begin{tabular}{p{23.5cm}}\n")
    for(e in erros)
        cat(e, "\\\\\n")
    cat("\\end{tabular}\n")
    rm(e)
}
@


<<printTabProdDet>>=
print(xtable(b, display = c("s", "s", "s", "d", "s", "s", "s"), align = "lllrllr",
             caption = "Produção detalhada", label = "tab:proddet"),
      sanitize.text.function = function(x)x,
      tabular.environment = "longtable", floating = FALSE, include.rownames = FALSE)
@

\clearpage

<<apendice2>>=
a <- p[p$tipo == "Artigo", ]
a <- a[!is.na(a$titulo), ]
a <- a[tolower(a$titulo) != tolower(a$livro.ou.periodico), c("titulo", "livro.ou.periodico")]
a <- a[!duplicated(a), ]
colnames(a) <- c("Título Qualis", "Título Lattes")
print(xtable(a, align = "lp{13cm}p{10cm}",
             caption = "Títulos de periódicos registrados nos currículos com alguma diferença dos títulos na planilha Qualis"),
      include.rownames = FALSE, floating = FALSE, tabular.environment = "longtable")
rm(a, b)
@

\clearpage

<<apendice3>>=
semqualis <- p[p$qualis == "SQ", c("isxn", "livro.ou.periodico")]
semqualis <- semqualis[!duplicated(semqualis), ]
semqualis <- semqualis[order(semqualis$livro.ou.periodico), ]
semqualis$livro.ou.periodico <- sub(" \x26 ", " \x5c\x5c\x26 ", semqualis$livro.ou.periodico)
colnames(semqualis) <- c("ISSN", "Título do periódico")
print(xtable(semqualis, align = "lrl", caption = "Lista de periódicos sem qualis"),
      tabular.environment = "longtable", floating = FALSE, include.rownames = FALSE)
rm(semqualis)

@

\end{document}
