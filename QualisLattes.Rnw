\documentclass[12pt,brazil]{article}
\usepackage{babel}
\usepackage{color}
\usepackage{geometry}
\geometry{a4paper,landscape,left=2cm,right=2cm,top=2cm,bottom=2cm}
\usepackage{fontspec}
\setmainfont{Liberation Serif}
\usepackage{float}
\usepackage{longtable}
\usepackage{colortbl}
\usepackage{booktabs}
\usepackage{indentfirst}
\usepackage[unicode=true,
  pdfsubject={},
  pdfkeywords={},
  plainpages=false,
  bookmarks=false,
  pdfborder={0 0 0},
]{hyperref}

\input{info.tex}

\title{\TituloDoc}
\author{\Autor}
\date{\today}


\begin{document}

\maketitle

\tableofcontents

\clearpage

<<loadlibraries, echo=FALSE, cache=FALSE, message=FALSE>>=
opts_chunk$set(echo=FALSE, cache=FALSE,  fig.width=6, fig.height=3, fig.align="center", results='asis')
library("XML")
library("xtable")
library("descr")
options(xtable.table.placement = "H",
        xtable.caption.placement = "top",
        xtable.booktabs = TRUE,
        xtable.floating = FALSE,
        xtable.tabular.environment = "longtable",
        format.args = list(big.mark = ".", decimal.mark = ","))
source("info.R")
@

<<lattes>>=
doutorado <- list()
posdoc <- list()
premios <- list()
oriand <- list()
oriconc <- list()
ensino <- list()
nlist <- list()
obter.producao <- function(arquivo)
{
    unzip(paste0("lattes_xml/", arquivo), exdir = "/tmp/")
    xl <- xmlTreeParse("/tmp/curriculo.xml", encoding = "latin1")
    xl <- xl$doc$children$`CURRICULO-VITAE`
    prof <- xl$children$`DADOS-GERAIS`
    nomep <- prof$attributes[["NOME-COMPLETO"]]

    dout <- prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children$DOUTORADO$attributes
    dout <- dout[c("NOME-INSTITUICAO", "NOME-CURSO", "ANO-DE-CONCLUSAO")]

    da <- sub("(..)(..)(....)", "\\1/\\2/\\3", xl$attributes[["DATA-ATUALIZACAO"]])
    doutorado[[length(doutorado)+1]] <<- c("Professor" = nomep, dout,
                                       "DataCV" = da)

    if("POS-DOUTORADO" %in% names(prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children)){
        xx <- prof$children$`FORMACAO-ACADEMICA-TITULACAO`$children
        for(ii in 1:length(xx)){
            if("POS-DOUTORADO" == names(xx)[ii]){
                yy <- xx[[ii]]$attributes[c("NOME-INSTITUICAO", "ANO-DE-INICIO", "ANO-DE-CONCLUSAO")]
                posdoc[[length(posdoc)+1]] <<- c("Professor" = nomep, yy)
            }
        }
    }

    if("ORIENTACOES-CONCLUIDAS" %in% names(xl$children$`OUTRA-PRODUCAO`$children)){
        xx <- xl$children$`OUTRA-PRODUCAO`$children$`ORIENTACOES-CONCLUIDAS`$children
        for(ii in 1:length(xx)){
            yy <- xx[[ii]]
            oriconc[[length(oriconc)+1]] <<- c("Professor" = nomep, yy[[1]]$attributes[c("NATUREZA", "ANO")])
        }
    }

    if(!is.null(xl$children$`DADOS-COMPLEMENTARES`$children$`ORIENTACOES-EM-ANDAMENTO`)){
        oa <- xl$children$`DADOS-COMPLEMENTARES`$children$`ORIENTACOES-EM-ANDAMENTO`$children
        for(ii in 1:length(oa))
        oriand[[length(oriand)+1]] <<- c("Professor" = nomep,
                                         oa[[ii]]$children[[1]]$attributes[c("NATUREZA", "ANO")],
                                         oa[[ii]]$children[[2]]$attributes["NOME-DO-ORIENTANDO"])
    }


    if("PREMIOS-TITULOS" %in% names(prof$children)){
        xx <- prof$children$`PREMIOS-TITULOS`$children
        for(ii in 1:length(xx)){
            premios[[length(premios)+1]] <<- c("Professor" = nomep, xx[[ii]]$attributes)
        }
    }

    ap <- xl$children$`DADOS-GERAIS`$children$`ATUACOES-PROFISSIONAIS`$children
    for(ii in 1:length(ap)){
        yy <- ap[[ii]]$children
        if("ATIVIDADES-DE-ENSINO" %in% names(yy))
            for(ens in yy$`ATIVIDADES-DE-ENSINO`$children){
                ensino[[length(ensino)+1]] <<- c("Professsor" = nomep,
                                                 ens$attributes[c("TIPO-ENSINO",
                                                                  "MES-INICIO",
                                                                  "ANO-INICIO",
                                                                  "MES-FIM",
                                                                  "ANO-FIM")])
            }
    }

    ap1 <- ap[[1]]

    xl <- xl$children$`PRODUCAO-BIBLIOGRAFICA`
    artigos <- xl$children$`ARTIGOS-PUBLICADOS`
    artigos <- artigos$children
    livros  <- xl$children$`LIVROS-E-CAPITULOS`
    capitulos <- livros$children$`CAPITULOS-DE-LIVROS-PUBLICADOS`
    capitulos <- capitulos$children
    livros <- livros$children$`LIVROS-PUBLICADOS-OU-ORGANIZADOS`
    livros <- livros$children
    rm(xl)

    pegar.artigo <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-ARTIGO`$attributes
        dl <- p$children$`DETALHAMENTO-DO-ARTIGO`$attributes
        if(db[["NATUREZA"]] == "COMPLETO"){
            res <- c(prof, db[["ANO-DO-ARTIGO"]], "Artigo",
                     db[["TITULO-DO-ARTIGO"]],
                     dl[["TITULO-DO-PERIODICO-OU-REVISTA"]],
                     dl[["ISSN"]])
        } else {
            res <- c(NA, NA, NA, NA, NA, NA)
        }
        return(res)
    }

    pegar.capitulo <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-CAPITULO`$attributes
        dl <- p$children$`DETALHAMENTO-DO-CAPITULO`$attributes
        res <- c(prof, db[["ANO"]], "Cap",
                 db[["TITULO-DO-CAPITULO-DO-LIVRO"]],
                 dl[["TITULO-DO-LIVRO"]], dl[["ISBN"]])
        return(res)
    }

    pegar.livro <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-LIVRO`
        db <- db$attributes
        dl <- p$children$`DETALHAMENTO-DO-LIVRO`
        dl <- dl$attributes
        if(db[["TIPO"]] == "LIVRO_ORGANIZADO_OU_EDICAO")
            res <- c(prof, db[["ANO"]], "Org", db[["TITULO-DO-LIVRO"]], NA, dl[["ISBN"]])
        else
            res <- c(prof, db[["ANO"]], "Lvr", db[["TITULO-DO-LIVRO"]], NA, dl[["ISBN"]])
        return(res)
    }

    b <- rbind(do.call("rbind", lapply(artigos,   pegar.artigo,   nomep)),
               do.call("rbind", lapply(capitulos, pegar.capitulo, nomep)),
               do.call("rbind", lapply(livros,    pegar.livro,    nomep)))
    rownames(b) <- NULL
    colnames(b) <- c("prof", "ano", "tipo", "producao", "livro.ou.periodico", "isxn")
    b
}

xx <- lapply(dir("lattes_xml", pattern = "*.zip"), obter.producao)
xx <- do.call("rbind", xx)
p <- as.data.frame(xx, stringsAsFactors = FALSE)
rm(xx, obter.producao)

# Especificar o período do relatório
p <- p[!is.na(p$ano) & p$ano >= Inicio & p$ano <= Fim, ]

p$ano <- factor(as.numeric(p$ano), levels = Inicio:Fim, labels = as.character(Inicio:Fim))
@

<<mergeQualis>>=
if(exists("equivalente")){
    for(i in 1:length(equivalente))
        if(sum(qualis$isxn == equivalente[i]) == 1){
            idx <- grep(equivalente[i], qualis$isxn)
            qualis <- rbind(qualis, qualis[idx, ])
            qualis[nrow(qualis), "isxn"] <- names(equivalente)[i]
        }
}

p <- merge(p, qualis, all.x = TRUE, stringsAsFactors = FALSE)

p$qualis[is.na(p$qualis) & p$tipo == "Artigo"] <- "SQ"
p$qualis[is.na(p$qualis) & p$tipo != "Artigo"] <- p$tipo[is.na(p$qualis) & p$tipo != "Artigo"]

pontos <- as.data.frame(rbind(c(extenso = "Artigo Qualis A1", qualis = "A1"),
                              c("Artigo Qualis A2", "A2"),
                              c("Artigo Qualis B1", "B1"),
                              c("Artigo Qualis B2", "B2"),
                              c("Artigo Qualis B3", "B3"),
                              c("Artigo Qualis B4", "B4"),
                              c("Artigo Qualis B5", "B5"),
                              c("Artigo Qualis C", "C"),
                              c(paste("Artigo sem Qualis na área de", NomeComite), "SQ"),
                              c("Organização de dossiê em periódico", "OD"),
                              c("Livro publicado", "Lvr"),
                              c("Livro organizado", "Org"),
                              c("Capítulo de livro", "Cap")), stringsAsFactors = FALSE)
pontos <- merge(pontos, data.frame(qualis = names(PontosQualis), pontos = PontosQualis, stringsAsFactors = FALSE))
p <- merge(p, pontos, all.x = TRUE)

# Organização de dossiês em periódicos:
idx <- p$tipo != "Artigo" & p$qualis %in% c("A1", "A2", "B1", "B2", "B3", "B4", "B5", "C")
if(length(idx) > 0){
    p$qualis[idx] <- "OD"
    p$pontos[idx] <- 0
}

if(sum(is.na(p$pontos)) > 0){
    cat("\n\n\\textcolor{red}{Pontuação não definida}:\n\n\\begin{verbatim}\n")
    print(p[is.na(p$pontos), c("prof", "livro.ou.periodico", "qualis", "isxn")])
    cat("\\end{verbatim}\n\n")
}

p$prof <- factor(p$prof)

pontuacao <- as.data.frame(tapply(p$pontos, list(p$prof, p$ano), sum, na.rm = TRUE))
pontuacao$Professor <- rownames(pontuacao)
pontuacao <- pontuacao[, c(ncol(pontuacao), 1:(ncol(pontuacao)-1))]
if(ncol(pontuacao) > 2){
    pontuacao$Total <- apply(pontuacao[, 2:ncol(pontuacao)], 1, sum, na.rm = TRUE)
    pontuacao$Total[is.na(pontuacao$Total)] <- 0
    pmedia <- round(mean(pontuacao$Total))
    pmediana <- round(median(pontuacao$Total))
    pontuacao <- pontuacao[order(pontuacao$Total, decreasing = TRUE), ]
} else {
    pmedia <- round(mean(pontuacao[, 2]))
    pmediana <- round(median(pontuacao[, 2]))
    pontuacao <- pontuacao[order(pontuacao[, 2], decreasing = TRUE), ]
}


pTop <- p[p$qualis %in% c("A1", "A2", "B1"), ]
pontuacaoTop <- as.data.frame(tapply(pTop$pontos, list(pTop$prof, pTop$ano), sum, na.rm = TRUE))
pontuacaoTop$Professor <- rownames(pontuacaoTop)
pontuacaoTop <- pontuacaoTop[, c(ncol(pontuacaoTop), 1:(ncol(pontuacaoTop)-1))]
if(ncol(pontuacaoTop) > 2){
    pontuacaoTop$Total <- apply(pontuacaoTop[, 2:ncol(pontuacaoTop)], 1, sum, na.rm = TRUE)
    pontuacaoTop$Total[is.na(pontuacaoTop$Total)] <- 0
    ptmedia <- round(mean(pontuacaoTop$Total))
    ptmediana <- round(median(pontuacaoTop$Total))
    pontuacaoTop <- pontuacaoTop[order(pontuacaoTop$Total, decreasing = TRUE), ]
} else {
    ptmedia <- round(mean(pontuacaoTop[, 2]))
    ptmediana <- round(median(pontuacaoTop[, 2]))
    pontuacaoTop <- pontuacaoTop[order(pontuacaoTop[, 2], decreasing = TRUE), ]
}

p$um <- 1
producao <- tapply(p$um, list(p$prof, p$qualis), sum)
producao <- producao[, !grepl("Nada", colnames(producao))]
rownames(producao) <- c(rownames(producao)[1], paste("\\hline", rownames(producao)[2:nrow(producao)]))
@

<<printDataLattes>>=
#doutorado <- data.frame(Professor = names(doutorado), Data = doutorado, stringsAsFactors = FALSE)
doutorado <- do.call("rbind", doutorado)
colnames(doutorado) <- c("Professor", "Instituição doutorado", "Nome do curso", "Ano", "DataCV")
quando <- as.Date(doutorado[, "DataCV"], format = "%d/%m/%Y")
doutorado <- doutorado[order(quando), ]
rm(quando)
print(xtable(doutorado[, c("Professor", "DataCV")], align = "llc", caption = "Data de atualização do Currículo Lattes"), include.rownames = FALSE)
@

\clearpage

\section{Titulação}

<<tabelaGeral>>=
doutorado[, "Professor"] <- sub(" .* ", " ", doutorado[, "Professor"])
doutorado <- doutorado[order(doutorado[, "Ano"]), ]
print(xtable(doutorado[, 1:4], align = "llllc", caption = "Informações gerais sobre professores"), include.rownames = FALSE)
@

\newpage

<<areaTitulo>>=
xtable(freq(factor(doutorado[, "Nome do curso"]), plot = FALSE),
       caption = "Área de titulação")
@

\newpage

<<localTitulo>>=
xtable(freq(factor(doutorado[, "Instituição doutorado"]), plot = FALSE),
       caption = "Instituição de titulação")
@

\clearpage

<<posdoc>>=
posdoc <- do.call("rbind", posdoc)
colnames(posdoc) <- c("Professor", "Instituição", "Início", "Fim")
posdoc[, 1] <- sub(" .* ", " ", posdoc[, 1])
posdoc <- posdoc[order(posdoc[, "Fim"]), ]
print(xtable(posdoc, align = "lp{4.5cm}p{14cm}cc",
             caption = "Lista de Pós-doutorados realizados"),
      floating = FALSE, tabular.environment = "longtable",
      include.rownames = FALSE)
@

\clearpage

<<premios>>=
if(length(premios)){
    premios <- do.call("rbind", premios)
    colnames(premios) <- c("Professor", "Prêmio", "Entidade promotora", "Ano", "En")
    premios <- premios[order(premios[, "Ano"]), ]
    premios[, "Professor"] <- sub(" .* ", " ", premios[, "Professor"])
    premios <- premios[premios[, "Ano"] >= Inicio & premios[, "Ano"] <= Fim, ]
    if(nrow(premios) > 0)
        print(xtable(premios, align = "llp{8cm}p{8cm}cl", caption = "Lista de Prêmios recebidos"),
              include.rownames = FALSE)
    else
        cat("Nenhum prêmio recebido no período.\n")
} else {
        cat("Nenhum prêmio recebido.\n")
}
@

\newpage

\section{Orientações}

Nas tabelas \ref{tab:oriconc}, \ref{tab:oriand} e \ref{tab:oriandDet},
M = Mestrado,
O = Outros,
IC = Iniciação científica,
G = Trabalho de conclusão de curso,
E = Monografia de curso de aperfeiçoamento ou especialização,
M = Dissertação de mestrado,
D = Tese de doutorado e
PD = Supervisão de pós-doutorado.

<<oriconc>>=
oriconc <- do.call("rbind", oriconc)
colnames(oriconc) <- c("Professor", "Natureza", "Ano")
oriconc <- oriconc[oriconc[, "Ano"] >= Inicio & oriconc[, "Ano"] <= Fim, ]
oriconc <- as.data.frame(oriconc)

levels(oriconc$Natureza) <- sub("Dissertação de mestrado", "M", levels(oriconc$Natureza))
levels(oriconc$Natureza) <- sub("INICIACAO_CIENTIFICA", "IC", levels(oriconc$Natureza))
levels(oriconc$Natureza) <-
    sub("MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO", "E",
        levels(oriconc$Natureza))
levels(oriconc$Natureza) <- sub("ORIENTACAO-DE-OUTRA-NATUREZA", "O", levels(oriconc$Natureza))
levels(oriconc$Natureza) <- sub("Supervisão de pós-doutorado", "PD", levels(oriconc$Natureza))
levels(oriconc$Natureza) <- sub("Tese de doutorado", "D", levels(oriconc$Natureza))
levels(oriconc$Natureza) <- sub("TRABALHO_DE_CONCLUSAO_DE_CURSO_GRADUACAO", "G",
                                levels(oriconc$Natureza))
oriconc$um <- 1
oriconcTab <- tapply(oriconc$um, list(oriconc$Professor, oriconc$Natureza), sum)
oriconcTab[is.na(oriconcTab)] <- 0

# Ordenar colunas (nem todos os programas têm todos os tipos de orientações)
ordem <- c("O", "IC", "G", "E", "M", "D", "PD")
ordem <- ordem[ordem %in% levels(oriconc$Natureza)]

ro <- 1:nrow(oriconcTab)
if("PD" %in% ordem & "D" %in% ordem & "M" %in% ordem){
    ro <- order(oriconcTab[, "PD"], oriconcTab[, "D"], oriconcTab[, "M"],
                decreasing = TRUE)
} else {
    if("D" %in% ordem & "M" %in% ordem){
        ro <- order(oriconcTab[, "D"], oriconcTab[, "M"], decreasing = TRUE)
    } else {
        if("M" %in% ordem)
            ro <- order(oriconcTab[, "M"], decreasing = TRUE)
    }
}

oriconcTab <- oriconcTab[ro, ordem]

aln <- paste0("ll", paste0(rep("r", ncol(oriconcTab)-1), collapse = ""))

xtable(oriconcTab, align = aln, label = "tab:oriconc", digits = 0,
       caption = paste0("Orientações concluídas no período ", Inicio, "--", Fim))
@

\newpage

<<oriand>>=
oriand <- do.call("rbind", oriand)
oriand <- as.data.frame(oriand)
colnames(oriand) <- c("Professor", "Natureza", "Ano", "Orientando")
oriand <- oriand[order(oriand$Ano), ]
levels(oriand$Natureza) <- sub("Dissertação de mestrado", "M", levels(oriand$Natureza))
levels(oriand$Natureza) <- sub("Iniciação Científica", "IC", levels(oriand$Natureza))
levels(oriand$Natureza) <-
    sub("Monografia de conclusão de curso de aperfeiçoamento/especialização", "E",
        levels(oriand$Natureza))
levels(oriand$Natureza) <- sub("Orientação de outra natureza", "O", levels(oriand$Natureza))
levels(oriand$Natureza) <- sub("Supervisão de pós-doutorado", "PD", levels(oriand$Natureza))
levels(oriand$Natureza) <- sub("Tese de doutorado", "D", levels(oriand$Natureza))
levels(oriand$Natureza) <- sub("Trabalho de conclusão de curso de graduação", "G",
                               oriand$Natureza)
oriand$um <- 1
oriandTab <- tapply(oriand$um, list(oriand$Professor, oriand$Natureza), sum)
oriandTab[is.na(oriandTab)] <- 0

ordem <- c("O", "IC", "G", "E", "M", "D", "PD")
ordem <- ordem[ordem %in% levels(oriand$Natureza)]

ro <- 1:nrow(oriandTab)
if("PD" %in% ordem & "D" %in% ordem & "M" %in% ordem){
    ro <- order(oriandTab[, "PD"], oriandTab[, "D"], oriandTab[, "M"],
                decreasing = TRUE)
} else {
    if("D" %in% ordem & "M" %in% ordem){
        ro <- order(oriandTab[, "D"], oriandTab[, "M"], decreasing = TRUE)
    } else {
        if("M" %in% ordem)
            ro <- order(oriandTab[, "M"], decreasing = TRUE)
    }
}

oriandTab <- oriandTab[ro, ordem]

aln <- paste0("ll", paste0(rep("r", ncol(oriandTab)-1), collapse = ""))

xtable(oriandTab, align = aln, label = "tab:oriand", digits = 0,
       caption = paste0("Orientações em andamento no período ", Inicio, "--", Fim))
@

\newpage

<<oriandTab>>=
oriand$um <- NULL
print(xtable(oriand, align = "llccl", label = "tab:oriandDet",
             caption = "Detalhamento das orientações em andamento"),
      include.rownames = FALSE)
@

\newpage

\section{Ensino}

A Tabela \ref{tab:ensino} mostra todas as disciplinas ministradas pelos
professores em todas as instituições.

<<tabEnsino>>=
ensino <- do.call("rbind", ensino)
ensino <- as.data.frame(ensino, stringsAsFactors = FALSE)
names(ensino) <- c("Professor", "Tipo", "MI", "AnoI", "MF", "AnoF")
ensino <- ensino[ensino$AnoI >= as.character(Inicio) &
                 (ensino$AnoF <= as.character(Fim) | ensino$AnoF <= ""), ]
ensino$um <- 1
ensinoTab <- tapply(ensino$um, list(ensino$Professor, ensino$Tipo), sum)
ensinoTab[is.na(ensinoTab)] <- 0

aln <- paste0("ll", paste0(rep("r", ncol(ensinoTab)-1), collapse = ""))
xtable(ensinoTab, align = aln, label = "tab:ensino", digits = 0,
       caption = paste0("Número de disciplinas ministradas no período ", Inicio, "--", Fim))
@

\newpage

\section{Produção bibliográfica}

A Tabela \ref{tab:pontos} mostra os valores atribuídos aos diferentes níveis
de classificação Qualis dos periódicos. Livros e capítulos de livros não
classificados pelo comitê de \emph{\NomeComite} da CAPES, podem não ter sido
contabilizados na produção do Programa, mas, aqui, estão, arbitrariamente,
recebendo pontuação equivalente a L2. Qualis de outras áreas não têm valor
para a área de \emph{\NomeComite}.

<<classifpontos>>=
colnames(pontos) <- c("Classe", "Abreviatura", "Pontos")
print(xtable(pontos, digits = 0, label = "tab:pontos",
             caption = "Tabela de pontuação conforme classificação da produção"),
      include.rownames = FALSE)
@

Seguindo os valores da Tabela \ref{tab:pontos}, a pontuação total média dos
professores do Programa de Pós-Graduação em \NomeProg{} no período
\Sexpr{Inicio}--\Sexpr{Fim} foi de \textbf{\Sexpr{pmedia}} pontos e a mediana
de \textbf{\Sexpr{pmediana}} pontos. Considerando apenas publicações em
periódicos classificados nos estratos A1, A2 e B1, a média foi de
\textbf{\Sexpr{ptmedia}} e a mediana foi de \textbf{\Sexpr{ptmediana}} pontos.

\newpage

<<ppgs_pontos>>=
print(xtable(pontuacao, digits = 0,
             caption = "Professores classificados por pontuação total"),
      include.rownames = FALSE)
@

\newpage

<<ppgs_pontosTop>>=
print(xtable(pontuacaoTop, digits = 0,
             caption = "Professores classificados por pontuação A1, A2 e B1"),
      include.rownames = FALSE)
@

\newpage

<<figRanking2, fig.height=5, fig.width=10, fig.pos="H", fig.cap=paste0("Pontuação dos professores do PPG --- ", Inicio, "--", Fim)>>=
par(mfrow=c(1, 2), mar = c(3.4, 2, 2, 2) + 0.1)
ppp <- pontuacao
ppp$Professor <- sub(" .*", "", ppp$Professor)
if(length(Inicio:Fim) == 1)
    ppp$Total <- ppp[[as.character(Inicio)]]
bx <- barplot(ppp$Total, names = FALSE, col = "lightblue", main = "Pontuação total") + 0.5
text(bx, -10, labels = ppp$Professor, pos = 2, cex = 0.9, srt = 90, xpd = TRUE)

par(mar = c(3.8, 4, 2, 0) + 0.1)
ppp <- pontuacaoTop
if(length(Inicio:Fim) == 1)
    ppp$Total <- ppp[[as.character(Inicio)]]
if(sum(is.na(ppp$Total)) < length(ppp$Total)){
    ppp <- ppp[order(ppp$Total, decreasing = TRUE), ]
    ppp$Professor <- sub(" .*", "", ppp$Professor)
    bx <- barplot(ppp$Total, names = FALSE, col = "lightblue",
                  main = "Somente A1, A2 e B1") + 0.5
    text(bx, -10, labels = ppp$Professor, pos = 2, cex = 0.9, srt = 90, xpd = TRUE)
}
rm(bx, ppp)
@

\clearpage

<<producao_qualis>>=
print(xtable(producao, align = paste(c("l", rep("r", ncol(producao))), collapse = "|"),
             display = c("s", rep("d", ncol(producao))),
             caption = "Produção segundo classificação Qualis"),
      sanitize.rownames.function = function(x) x)
@

\clearpage

\definecolor{ncarac}{rgb}{1,0.7,0.7}
\definecolor{ninval}{rgb}{1,1,0.5}
\definecolor{duplic}{rgb}{0.7,0.8,1}
\definecolor{capdup}{rgb}{1,0.5,1}


<<anexo1, warning=FALSE>>=
# http://stackoverflow.com/questions/5060076/convert-html-character-entity-encoding-in-r
# Convenience function to convert html codes
html2txt <- function(str) {
      xpathApply(htmlParse(str, asText=TRUE, encoding = "UTF-8"),
                 "//body//text()", xmlValue)[[1]]
}

b <- p[, c("prof", "producao", "ano", "qualis", "livro.ou.periodico", "isxn")]
b <- b[order(p$prof, p$ano, p$producao), ]

b$prof <- sub(" .* ", " ", b$prof)
b$prof <- sub("^(...................).*", "\\1", b$prof)
b$producao <- sapply(b$producao, html2txt)
# b$livro.ou.periodico <- html2txt(b$livro.ou.periodico)
# b$producao <- gsub("_", "\\_", b$producao)
b$livro.ou.periodico <- gsub("_", "\\\\_", b$livro.ou.periodico)

erros <- NULL

bp <- split(b, b$prof)
ObterCapDup <- function(x)
{
    isbnls <- x$isxn[x$qualis == "Lvr"]
    x$capdup <- x$qualis == "Cap" & x$isxn %in% isbnls
    x
}
bp <- lapply(bp, ObterCapDup)
b <- do.call("rbind", bp)
if(sum(b$capdup) > 0){
    b$prof[b$capdup] <- paste("\\rowcolor{capdup}", b$prof[b$capdup])
    erros <- c(erros, "\\rowcolor{capdup}Capítulo indevidamente registrado porque pertence a livro do próprio professor.")
}
b$capdup <- NULL

idx <- ((b$tipo == "Artigo" | b$qualis == "OD") & nchar(b$isxn) != 8) | ((b$tipo != "Artigo" & b$qualis != "OD") & nchar(b$isxn) != 13)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{ncarac}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{ncarac}ISSN ou ISBN com número inválido de caracteres. O ISSN deve ter 8 caracteres e o ISBN deve ter 13.")
}

# ISBN check digit
checkISBN <- function(x){
    x <- strsplit(x, "")[[1]]
    if(length(x) != 13)
        return(FALSE) # Não é livro
    x <- as.numeric(x)
    if(sum(is.na(x)) > 0)
        return(TRUE)
    soma <- 3 * (x[2] + x[4] + x[6] + x[8] + x[10] + x[12]) + x[1] + x[3] + x[5] + x[7] + x[9] + x[11]
    sobra <- soma %% 10
    correto <- 10 - sobra
    if(x[13] == correto){
        return(FALSE) # Nenhum problema
    } else {
        return(TRUE)  # Erro na soma
    }
}
idx <- sapply(b$isxn, checkISBN)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{ninval}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{ninval}O ISBN é inválido. Confira se todos os algarismos estão corretos.")
}


b$producao <- sub("^(....................................).*", "\\1", b$producao)
b$livro.ou.periodico <- sub("^(....................................).*", "\\1", b$livro.ou.periodico)
idx <- grep("[A-Z][A-Z][A-Z][A-Z][A-Z]", b$producao)
b$producao[idx] <- sub("^(...........................).*", "\\1", b$producao[idx])
idx <- grep("[A-Z][A-Z][A-Z][A-Z][A-Z]", b$livro.ou.periodico)
b$livro.ou.periodico[idx] <- sub("^(...........................).*", "\\1", b$livro.ou.periodico[idx])

dup <- b[, c("prof", "qualis", "producao")]
dup$producao <- tolower(dup$producao)
dup$producao <- gsub("[[:punct:]]", "", dup$producao)
dup$producao <- gsub("[[:space:]]", "", dup$producao)
dup$producao <- sub("^(........................).*", "\\1", dup$producao)
idx <- duplicated(dup)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{duplic}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{duplic}Produção registrada mais de uma vez.")
}

rm(idx, dup, checkISBN)

b$livro.ou.periodico <- gsub("&", "\\\\&", b$livro.ou.periodico)
b$producao <- gsub("&", "\\\\&", b$producao)
b$producao <- gsub("#", "\\\\#", b$producao)
b$livro.ou.periodico <- gsub("#", "\\\\#", b$livro.ou.periodico)

levels(b$qualis) <- sub("Nada", " ", levels(b$qualis))
names(b) <- c("Professor", "Produção (títulos truncados)", "Ano", "Qualis",
              "Periódico ou Livro (títulos truncados)", "ISSN/ISBN")
@

<<printerros>>=
if(length(erros) > 0){
    cat("\\textbf{Legenda de erros de preenchimento do Lattes indicados na Tabela \\ref{tab:proddet}}:\n\n")
    cat("\\begin{tabular}{p{23.5cm}}\n")
    for(e in erros)
        cat(e, "\\\\\n")
    cat("\\end{tabular}\n")
    rm(e)
}
@

<<printTabProdDet>>=
print(xtable(b, display = c("s", "s", "s", "d", "s", "s", "s"), align = "lllrllr",
             caption = "ANEXO --- Produção detalhada", label = "tab:proddet"),
      sanitize.text.function = function(x)x,
      tabular.environment = "longtable", floating = FALSE, include.rownames = FALSE)
@

\clearpage

<<anexo2>>=
a <- p[p$tipo == "Artigo", ]
a <- a[!is.na(a$titulo), ]
a <- a[tolower(a$titulo) != tolower(a$livro.ou.periodico), c("titulo", "livro.ou.periodico")]
a <- a[!duplicated(a), ]
colnames(a) <- c("Título Qualis", "Título Lattes")
print(xtable(a, align = "lp{13cm}p{10cm}",
             caption = "Títulos de periódicos registrados nos currículos com alguma diferença dos títulos na planilha Qualis"),
      include.rownames = FALSE, floating = FALSE, tabular.environment = "longtable")
rm(a, b)
@

\clearpage

<<anexo3>>=
semqualis <- p[p$qualis == "SQ", c("isxn", "livro.ou.periodico")]
semqualis <- semqualis[!duplicated(semqualis), ]
semqualis <- semqualis[order(semqualis$livro.ou.periodico), ]
semqualis$livro.ou.periodico <- sub(" \x26 ", " \x5c\x5c\x26 ", semqualis$livro.ou.periodico)
colnames(semqualis) <- c("ISSN", "Título do periódico")
print(xtable(semqualis, align = "lrl", caption = "Lista de periódicos sem qualis"),
      tabular.environment = "longtable", floating = FALSE, include.rownames = FALSE)
rm(semqualis)

@

\end{document}
