\documentclass[12pt,brazil]{article}
\usepackage{babel}
\usepackage{color}
\usepackage{geometry}
\geometry{a4paper,left=2cm,right=2cm,top=2cm,bottom=2cm}
\usepackage{fontspec}
\setmainfont{Liberation Serif}
\usepackage{float}
\usepackage{longtable}
\usepackage{colortbl}
\usepackage{lscape}
\usepackage{booktabs}
\usepackage{indentfirst}
\usepackage[unicode=true,
  pdfsubject={},
  pdfkeywords={},
  plainpages=false,
  bookmarks=false,
  pdfborder={0 0 0},
]{hyperref}

\input{info.tex}

\title{\TituloDoc}
\author{\Autor}
\date{\today}


\begin{document}

\maketitle

<<loadlibraries, echo=FALSE, cache=FALSE, message=FALSE>>=
opts_chunk$set(echo=FALSE, cache=FALSE,  fig.width=6, fig.height=3, fig.align="center", results='asis')
library("XML")
library("xtable")
options(xtable.table.placement = "H",
        xtable.caption.placement = "top",
        xtable.booktabs = TRUE,
        format.args = list(big.mark = ".", decimal.mark = ","))

source("info.R")
@

<<lattes>>=
datacur <- character()
obter.producao <- function(arquivo)
{
    unzip(paste0("lattes_xml/", arquivo), exdir = "/tmp/")
    xl <- xmlTreeParse("/tmp/curriculo.xml", encoding = "latin1")
    xl <- xl$doc$children$`CURRICULO-VITAE`
    prof <- xl$children$`DADOS-GERAIS`
    prof <- prof$attributes[["NOME-COMPLETO"]]
    da <- sub("(..)(..)(....)", "\\1/\\2/\\3", xl$attributes[["DATA-ATUALIZACAO"]])
    names(da) <- prof
    xl <- xl$children$`PRODUCAO-BIBLIOGRAFICA`
    artigos <- xl$children$`ARTIGOS-PUBLICADOS`
    artigos <- artigos$children
    livros  <- xl$children$`LIVROS-E-CAPITULOS`
    capitulos <- livros$children$`CAPITULOS-DE-LIVROS-PUBLICADOS`
    capitulos <- capitulos$children
    livros <- livros$children$`LIVROS-PUBLICADOS-OU-ORGANIZADOS`
    livros <- livros$children
    rm(xl)

    pegar.artigo <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-ARTIGO`$attributes
        dl <- p$children$`DETALHAMENTO-DO-ARTIGO`$attributes
        if(db[["NATUREZA"]] == "COMPLETO"){
            res <- c(prof, db[["ANO-DO-ARTIGO"]], "Artigo",
                     db[["TITULO-DO-ARTIGO"]],
                     dl[["TITULO-DO-PERIODICO-OU-REVISTA"]],
                     dl[["ISSN"]])
        } else {
            res <- c(NA, NA, NA, NA, NA, NA)
        }
        return(res)
    }

    pegar.capitulo <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-CAPITULO`$attributes
        dl <- p$children$`DETALHAMENTO-DO-CAPITULO`$attributes
        res <- c(prof, db[["ANO"]], "Cap",
                 db[["TITULO-DO-CAPITULO-DO-LIVRO"]],
                 dl[["TITULO-DO-LIVRO"]], dl[["ISBN"]])
        return(res)
    }

    pegar.livro <- function(p, prof)
    {
        db <- p$children$`DADOS-BASICOS-DO-LIVRO`
        db <- db$attributes
        dl <- p$children$`DETALHAMENTO-DO-LIVRO`
        dl <- dl$attributes
        if(db[["TIPO"]] == "LIVRO_ORGANIZADO_OU_EDICAO")
            res <- c(prof, db[["ANO"]], "Org", db[["TITULO-DO-LIVRO"]], NA, dl[["ISBN"]])
        else
            res <- c(prof, db[["ANO"]], "Lvr", db[["TITULO-DO-LIVRO"]], NA, dl[["ISBN"]])
        return(res)
    }

    datacur <<- c(datacur, da)

    b <- rbind(do.call("rbind", lapply(artigos,   pegar.artigo,   prof)),
               do.call("rbind", lapply(capitulos, pegar.capitulo, prof)),
               do.call("rbind", lapply(livros,    pegar.livro,    prof)))
    rownames(b) <- NULL
    colnames(b) <- c("prof", "ano", "tipo", "producao", "livro.ou.periodico", "isxn")
    b
}

xx <- lapply(dir("lattes_xml", pattern = "*.zip"), obter.producao)
xx <- do.call("rbind", xx)
p <- as.data.frame(xx, stringsAsFactors = FALSE)
rm(xx, obter.producao)
p$ano <- as.numeric(p$ano)

# Especificar o período do relatório
p <- p[!is.na(p$ano) & p$ano >= Inicio & p$ano <= Fim, ]
@

<<mergeQualis>>=
if(exists("equivalente")){
    for(i in 1:length(equivalente))
        if(sum(qualis$isxn == equivalente[i]) == 1){
            idx <- grep(equivalente[i], qualis$isxn)
            qualis <- rbind(qualis, qualis[idx, ])
            qualis[nrow(qualis), "isxn"] <- names(equivalente)[i]
        }
}

p <- merge(p, qualis, all.x = TRUE, stringsAsFactors = FALSE)

p$qualis[is.na(p$qualis) & p$tipo == "Artigo"] <- "SQ"
p$qualis[is.na(p$qualis) & p$tipo != "Artigo"] <- p$tipo[is.na(p$qualis) & p$tipo != "Artigo"]

pontos <- as.data.frame(rbind(c(extenso = "Artigo Qualis A1", qualis = "A1"),
                              c("Artigo Qualis A2", "A2"),
                              c("Artigo Qualis B1", "B1"),
                              c("Artigo Qualis B2", "B2"),
                              c("Artigo Qualis B3", "B3"),
                              c("Artigo Qualis B4", "B4"),
                              c("Artigo Qualis B5", "B5"),
                              c("Artigo Qualis C", "C"),
                              c(paste("Artigo sem Qualis na área de", NomeComite), "SQ"),
                              c("Organização de dossiê em periódico", "OD"),
                              c("Livro publicado", "Lvr"),
                              c("Livro organizado", "Org"),
                              c("Capítulo de livro", "Cap")), stringsAsFactors = FALSE)
pontos <- merge(pontos, data.frame(qualis = names(PontosQualis), pontos = PontosQualis, stringsAsFactors = FALSE))
p <- merge(p, pontos, all.x = TRUE)

# Organização de dossiês em periódicos:
idx <- p$tipo != "Artigo" & p$qualis %in% c("A1", "A2", "B1", "B2", "B3", "B4", "B5", "C")
if(length(idx) > 0){
    p$qualis[idx] <- "OD"
    p$pontos[idx] <- 0
}

if(sum(is.na(p$pontos)) > 0){
    cat("\n\n\\textcolor{red}{Pontuação não definida}:\n\n\\begin{verbatim}\n")
    print(p[is.na(p$pontos), c("prof", "livro.ou.periodico", "qualis", "isxn")])
    cat("\\end{verbatim}\n\n")
}

p$prof <- factor(p$prof)

pontuacao <- as.data.frame(tapply(p$pontos, list(p$prof, p$ano), sum, na.rm = TRUE))
pontuacao$Professor <- rownames(pontuacao)
pontuacao <- pontuacao[, c(ncol(pontuacao), 1:length(Inicio:Fim))]
if(length(Inicio:Fim) > 1){
    pontuacao$Total <- apply(pontuacao[, 2:ncol(pontuacao)], 1, sum, na.rm = TRUE)
    pontuacao$Total[is.na(pontuacao$Total)] <- 0
    pmedia <- round(mean(pontuacao$Total))
    pmediana <- round(median(pontuacao$Total))
    pontuacao <- pontuacao[order(pontuacao$Total, decreasing = TRUE), ]
} else {
    pmedia <- round(mean(pontuacao[[as.character(Inicio)]]))
    pmediana <- round(median(pontuacao[[as.character(Inicio)]]))
    pontuacao <- pontuacao[order(pontuacao[[as.character(Inicio)]], decreasing = TRUE), ]
}


pTop <- p[p$qualis %in% c("A1", "A2", "B1"), ]
pontuacaoTop <- as.data.frame(tapply(pTop$pontos, list(pTop$prof, pTop$ano), sum, na.rm = TRUE))
pontuacaoTop$Professor <- rownames(pontuacaoTop)
pontuacaoTop <- pontuacaoTop[, c(ncol(pontuacaoTop), 1:length(Inicio:Fim))]
if(length(Inicio:Fim) > 1){
    pontuacaoTop$Total <- apply(pontuacaoTop[, 2:ncol(pontuacaoTop)], 1, sum, na.rm = TRUE)
    pontuacaoTop$Total[is.na(pontuacaoTop$Total)] <- 0
    pontuacaoTop <- pontuacaoTop[order(pontuacaoTop$Total, decreasing = TRUE), ]
} else {
    pontuacaoTop <- pontuacaoTop[order(pontuacaoTop[[as.character(Inicio)]], decreasing = TRUE), ]
}

p$um <- 1
producao <- tapply(p$um, list(p$prof, p$qualis), sum)
producao <- producao[, !grepl("Nada", colnames(producao))]
rownames(producao) <- c(rownames(producao)[1], paste("\\hline", rownames(producao)[2:nrow(producao)]))
@

A Tabela \ref{tab:pontos} mostra os valores atribuídos aos diferentes níveis
de classificação Qualis dos periódicos. Livros e capítulos de livros não
classificados pelo comitê de \emph{\NomeComite} da CAPES, podem não ter sido
contabilizados na produção do Programa, mas, aqui, estão, arbitrariamente,
recebendo pontuação equivalente a L2. Qualis de outras áreas não têm valor
para a área de \emph{\NomeComite}. 

<<classifpontos>>=
colnames(pontos) <- c("Classe", "Abreviatura", "Pontos")
print(xtable(pontos, digits = 0, label = "tab:pontos",
             caption = "Tabela de pontuação conforme classificação da produção"),
      include.rownames = FALSE)
@

<<printDataLattes>>=
datacur <- data.frame(Professor = names(datacur), Data = datacur, stringsAsFactors = FALSE)
quando <- as.Date(datacur$Data, format = "%d/%m/%Y")
datacur <- datacur[order(quando), ]
rm(quando)
print(xtable(datacur, align = "llc", caption = "Data de atualização dos currículos"), include.rownames = FALSE)
@

Seguindo os valores da Tabela \ref{tab:pontos}, a pontuação total média dos
professores do Programa de Pós-Graduação em \NomeProg{} no período
\Sexpr{Inicio}--\Sexpr{Fim} foi de \textbf{\Sexpr{pmedia}} pontos e a mediana
de \textbf{\Sexpr{pmediana}} pontos.

<<ppgs_pontos>>=
print(xtable(pontuacao, digits = 0,
             caption = "Professores classificados por pontuação total"),
      include.rownames = FALSE)
@

<<ppgs_pontosTop>>=
print(xtable(pontuacaoTop, digits = 0,
             caption = "Professores classificados por pontuação A1, A2 e B1"),
      include.rownames = FALSE)
@

\begin{landscape}

<<figRanking2, fig.height=5, fig.width=10, fig.pos="H", fig.cap=paste0("Pontuação dos professores do PPG --- ", Inicio, "--", Fim)>>=
par(mfrow=c(1, 2), mar = c(3.4, 2, 2, 2) + 0.1)
ppp <- pontuacao
ppp$Professor <- sub(" .*", "", ppp$Professor)
if(length(Inicio:Fim) == 1)
    ppp$Total <- ppp[[as.character(Inicio)]]
bx <- barplot(ppp$Total, names = FALSE, col = "lightblue", main = "Pontuação total") + 0.5
text(bx, -10, labels = ppp$Professor, pos = 2, cex = 0.9, srt = 90, xpd = TRUE)

par(mar = c(3.8, 4, 2, 0) + 0.1)
ppp <- pontuacaoTop
if(length(Inicio:Fim) == 1)
    ppp$Total <- ppp[[as.character(Inicio)]]
ppp <- ppp[order(ppp$Total, decreasing = TRUE), ]
ppp$Professor <- sub(" .*", "", ppp$Professor)
bx <- barplot(ppp$Total, names = FALSE, col = "lightblue",
              main = "Somente A1, A2 e B1") + 0.5
text(bx, -10, labels = ppp$Professor, pos = 2, cex = 0.9, srt = 90, xpd = TRUE)
rm(bx, ppp)
@

<<producao_qualis>>=
print(xtable(producao, align = paste(c("l", rep("r", ncol(producao))), collapse = "|"),
             display = c("s", rep("d", ncol(producao))),
             caption = "Produção segundo classificação Qualis"),
      sanitize.rownames.function = function(x) x)
@

\clearpage

\definecolor{ncarac}{rgb}{1,0.7,0.7}
\definecolor{ninval}{rgb}{1,1,0.5}
\definecolor{duplic}{rgb}{0.7,0.8,1}
\definecolor{capdup}{rgb}{1,0.5,1}


<<anexo1, warning=FALSE>>=
# http://stackoverflow.com/questions/5060076/convert-html-character-entity-encoding-in-r
# Convenience function to convert html codes
html2txt <- function(str) {
      xpathApply(htmlParse(str, asText=TRUE, encoding = "UTF-8"),
                 "//body//text()", 
                 xmlValue)[[1]] 
}

b <- p[, c("prof", "producao", "ano", "qualis", "livro.ou.periodico", "isxn")]
b <- b[order(p$prof, p$ano, p$producao), ]

b$prof <- sub("^(...................).*", "\\1", b$prof)
b$producao <- sapply(b$producao, html2txt)
# b$livro.ou.periodico <- html2txt(b$livro.ou.periodico)
# b$producao <- gsub("_", "\\_", b$producao)
b$livro.ou.periodico <- gsub("_", "\\\\_", b$livro.ou.periodico)

erros <- NULL

bp <- split(b, b$prof)
ObterCapDup <- function(x)
{
    isbnls <- x$isxn[x$qualis == "Lvr"]
    x$capdup <- x$qualis == "Cap" & x$isxn %in% isbnls
    x
}
bp <- lapply(bp, ObterCapDup)
b <- do.call("rbind", bp)
if(sum(b$capdup) > 0){
    b$prof[b$capdup] <- paste("\\rowcolor{capdup}", b$prof[b$capdup])
    erros <- c(erros, "\\rowcolor{capdup}Capítulo indevidamente registrado porque pertence a livro do próprio professor.")
}
b$capdup <- NULL

idx <- ((b$tipo == "Artigo" | b$qualis == "OD") & nchar(b$isxn) != 8) | ((b$tipo != "Artigo" & b$qualis != "OD") & nchar(b$isxn) != 13)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{ncarac}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{ncarac}ISSN ou ISBN com número inválido de caracteres. O ISSN deve ter 8 caracteres e o ISBN deve ter 13.")
}

# ISBN check digit
checkISBN <- function(x){
    x <- strsplit(x, "")[[1]]
    if(length(x) != 13)
        return(FALSE) # Não é livro
    x <- as.numeric(x)
    if(sum(is.na(x)) > 0)
        return(TRUE)
    soma <- 3 * (x[2] + x[4] + x[6] + x[8] + x[10] + x[12]) + x[1] + x[3] + x[5] + x[7] + x[9] + x[11]
    sobra <- soma %% 10
    correto <- 10 - sobra
    if(x[13] == correto){
        return(FALSE) # Nenhum problema
    } else {
        return(TRUE)  # Erro na soma
    }
}
idx <- sapply(b$isxn, checkISBN)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{ninval}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{ninval}O ISBN é inválido. Confira se todos os algarismos estão corretos.")
}


b$producao <- sub("^(....................................).*", "\\1", b$producao)
b$livro.ou.periodico <- sub("^(....................................).*", "\\1", b$livro.ou.periodico)
idx <- grep("[A-Z][A-Z][A-Z][A-Z][A-Z]", b$producao)
b$producao[idx] <- sub("^(...........................).*", "\\1", b$producao[idx])
idx <- grep("[A-Z][A-Z][A-Z][A-Z][A-Z]", b$livro.ou.periodico)
b$livro.ou.periodico[idx] <- sub("^(...........................).*", "\\1", b$livro.ou.periodico[idx])

dup <- b[, c("prof", "qualis", "producao")]
dup$producao <- tolower(dup$producao)
dup$producao <- gsub("[[:punct:]]", "", dup$producao)
dup$producao <- gsub("[[:space:]]", "", dup$producao)
dup$producao <- sub("^(........................).*", "\\1", dup$producao)
idx <- duplicated(dup)
if(sum(idx) > 0){
    b$prof[idx] <- paste("\\rowcolor{duplic}", b$prof[idx])
    erros <- c(erros, "\\rowcolor{duplic}Produção registrada mais de uma vez.")
}

rm(idx, dup, checkISBN)

b$livro.ou.periodico <- gsub("&", "\\\\&", b$livro.ou.periodico)
b$producao <- gsub("&", "\\\\&", b$producao)

levels(b$qualis) <- sub("Nada", " ", levels(b$qualis))
names(b) <- c("Professor", "Produção (títulos truncados)", "Ano", "Qualis",
              "Periódico ou Livro (títulos truncados)", "ISSN/ISBN")
@

<<printerros>>=
if(length(erros) > 0){
    cat("\\textbf{Legenda de erros de preenchimento do Lattes indicados na Tabela \\ref{tab:proddet}}:\n\n")
    cat("\\begin{tabular}{p{23.5cm}}\n")
    for(e in erros)
        cat(e, "\\\\\n")
    cat("\\end{tabular}\n")
    rm(e)
}
@

<<printTabProdDet>>=
print(xtable(b, display = c("s", "s", "s", "d", "s", "s", "s"), align = "lllrllr",
             caption = "ANEXO --- Produção detalhada", label = "tab:proddet"),
      sanitize.text.function = function(x)x,
      tabular.environment = "longtable", floating = FALSE, include.rownames = FALSE)
@

\clearpage

<<anexo2>>=
a <- p[p$tipo == "Artigo", ]
a <- a[!is.na(a$titulo), ]
a <- a[tolower(a$titulo) != tolower(a$livro.ou.periodico), c("titulo", "livro.ou.periodico")]
a <- a[!duplicated(a), ]
colnames(a) <- c("Título Qualis", "Título Lattes")
print(xtable(a, align = "lp{13cm}p{10cm}",
             caption = "Títulos de periódicos registrados nos currículos com alguma diferença dos títulos na planilha Qualis"),
      include.rownames = FALSE, floating = FALSE, tabular.environment = "longtable")
rm(a, b)
@

\clearpage

<<anexo3>>=
semqualis <- p[p$qualis == "SQ", c("isxn", "livro.ou.periodico")]
semqualis <- semqualis[!duplicated(semqualis), ]
semqualis <- semqualis[order(semqualis$livro.ou.periodico), ]
semqualis$livro.ou.periodico <- sub(" \x26 ", " \x5c\x5c\x26 ", semqualis$livro.ou.periodico)
colnames(semqualis) <- c("ISSN", "Título do periódico")
print(xtable(semqualis, align = "lrl", caption = "Lista de periódicos sem qualis"),
      tabular.environment = "longtable", floating = FALSE, include.rownames = FALSE)
rm(semqualis)

@

\end{landscape}
\end{document}
